import logging

# ๐งฉ ูููุจุงูุงุช ูููุตูุฉ ุญุณุจ ุงููุธููุฉ
from .charts_callbacks import register_charts_callbacks
from .filters_callbacks import register_filters_callbacks
from .export_callbacks import register_export_callbacks
from .upload_callbacks import register_upload_callbacks
from ..layouts.kpi_cards import register_kpi_callbacks

logger = logging.getLogger(__name__)

def register_callbacks(app):
    """
    ุชุณุฌูู ุฌููุน ูููุจุงูุงุช ุงูุชุญููู ูุงูุชูุงุนู ุฏุงุฎู ูุงุฌูุฉ ุงููุธุงู.
    ูุดูู ุฑูุน ุงูุจูุงูุงุชุ ุงูููุงุชุฑุ ุงูุฑุณูู ุงูุจูุงููุฉุ ุชุตุฏูุฑ ุงูุชูุงุฑูุฑุ ููุคุดุฑุงุช ุงูุฃุฏุงุก.
    ููุณุชุฏุนู ูุฐุง ูู app.py ูุชุฌููุน ูู ุงููููุจุงูุงุช ูู ููุทุฉ ูุงุญุฏุฉ.
    """
    callback_modules = [
        ("ุฑูุน ุงูุจูุงูุงุช", register_upload_callbacks),
        ("ุงูููุงุชุฑ", register_filters_callbacks),
        ("ุงูุฑุณูู ุงูุจูุงููุฉ", register_charts_callbacks),
        ("ุชุตุฏูุฑ ุงูุชูุงุฑูุฑ", register_export_callbacks),
        ("ูุคุดุฑุงุช ุงูุฃุฏุงุก (KPIs)", register_kpi_callbacks),
    ]

    for name, func in callback_modules:
        try:
            func(app)
            logger.info(f"โ ุชู ุชุณุฌูู ูููุจุงูุงุช {name} ุจูุฌุงุญ.")
        except Exception as e:
            logger.error(f"โ ุฎุทุฃ ุฃุซูุงุก ุชุณุฌูู ูููุจุงูุงุช {name}: {e}", exc_info=True)

__all__ = ["register_callbacks"]
